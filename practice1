import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.decomposition import PCA
from sklearn.pipeline import Pipeline
from sklearn.grid_search import GridSearchCV
from sklearn.metrics import make_scorer,f1_score
from sklearn.metrics import roc_auc_score

df=pd.read_csv(r'C:\Users\lightinfected\Desktop\bankloan.csv',header=None)
df=df.dropna(axis=0,how='any')
x=df.loc[:,2:9]
y=df.loc[:,10]
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.1,random_state=1)
pipe_lr=Pipeline([('scl',StandardScaler()),('pca',PCA(n_components=2)),('clf',LogisticRegression(penalty='l2',C=0.1))])
scorer=make_scorer(f1_score,pos_label='0')
param_grid=[{'pca__n_components':[2,4,6,8],'clf__C':[0.1,0.15,0.2,0.25]}]
gs=GridSearchCV(estimator=pipe_lr,param_grid=param_grid,scoring=scorer,cv=10,n_jobs=-1,verbose=1)
gs.fit(x_train,y_train)
gs.best_score_
gs.best_params_
###########################
###########################
pipe_lr=Pipeline([('scl',StandardScaler()),('pca',PCA(n_components=8)),('clf',LogisticRegression(penalty='l2',C=0.15))])
pipe_lr.fit(x_train,y_train)
pred_prob=pipe_lr.predict_proba(x_test)[:,1]
test=y_test.astype(np.int)
roc_auc_score(test,pred_prob)
###########################
###########################
scl=preprocessing.StandardScaler()
scl.fit_transform(x)
pca=PCA(n_components=8)
reduced_df=pca.fit_transform(df)
lr=LogisticRegression(penalty='l2',C=0.15)
lr.fit(x,y)
print(lr.coef_)
print(lr.intercept_)
